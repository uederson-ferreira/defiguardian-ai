#!/bin/bash

# RiskGuardian AI - PRECISE Avalanche Deployment
# Based on exact analysis of 36 .sol files

echo "üéØ RISKGUARDIAN AI - PRECISE AVALANCHE DEPLOYMENT"
echo "=================================================="
echo ""
echo "Based on analysis of your 36 .sol files:"
echo ""
echo "üì¶ CONTRACTS TO DEPLOY:"
echo "  ‚úÖ 4  Core contracts       (ContractRegistry, RiskRegistry, etc.)"
echo "  ‚úÖ 2  Automation contracts (AlertSystem, RiskGuardianMaster)"
echo "  ‚úÖ 4  Hedging contracts    (StopLoss, Rebalance, Volatility, CrossChain)"
echo "  ‚úÖ 1  Insurance contract   (RiskInsurance)"
echo "  ‚úÖ 4+ Mock contracts       (SepoliaSetup + MockHedge + MockUniswap)"
echo "  ‚úÖ 5+ Mock protocols       (Generated by SepoliaSetup)"
echo ""
echo "üìö LIBRARIES: Automatically linked (no deployment needed)"
echo "üîå INTERFACES: Not deployed (used for compilation only)"
echo "üìú SCRIPTS: Not deployed (execution only)"
echo ""
echo "üìä TOTAL: ~15-20 contracts will be deployed"
echo ""

# Environment check
if [ ! -f .env ]; then
    echo "‚ùå ERROR: .env file not found"
    exit 1
fi

source .env

# Validate required environment variables
if [ -z "$PRIVATE_KEY" ]; then
    echo "‚ùå ERROR: PRIVATE_KEY not set in .env"
    exit 1
fi

if [ -z "$DEPLOYER_ADDRESS" ]; then
    echo "‚ùå ERROR: DEPLOYER_ADDRESS not set in .env"
    exit 1
fi

# Configuration
if [ -z "$AVALANCHE_FUJI_RPC" ]; then
    AVALANCHE_FUJI_RPC="https://api.avax-test.network/ext/bc/C/rpc"
fi

echo "‚öôÔ∏è  CONFIGURATION:"
echo "   Deployer: $DEPLOYER_ADDRESS"
echo "   Network: Avalanche Fuji Testnet"
echo "   RPC: $AVALANCHE_FUJI_RPC"
echo ""

# Validate wallet access
echo "üîê Validating wallet access..."
WALLET_ADDRESS=$(cast wallet address --private-key $PRIVATE_KEY 2>/dev/null)
if [ "$WALLET_ADDRESS" != "$DEPLOYER_ADDRESS" ]; then
    echo "‚ùå ERROR: Private key does not match deployer address"
    echo "   Private key address: $WALLET_ADDRESS"
    echo "   Expected address: $DEPLOYER_ADDRESS"
    exit 1
fi
echo "‚úÖ Wallet validation successful"
echo ""

# Balance check
BALANCE=$(cast balance $DEPLOYER_ADDRESS --rpc-url $AVALANCHE_FUJI_RPC)
BALANCE_ETH=$(cast from-wei $BALANCE)
echo "üí∞ Available AVAX: $BALANCE_ETH"

if (( $(echo "$BALANCE_ETH < 0.5" | bc -l) )); then
    echo "‚ö†Ô∏è  Low balance. Get AVAX from: https://faucet.avax.network/"
    read -p "Continue? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo ""
echo "üöÄ STARTING PRECISE DEPLOYMENT..."
echo ""

# Compile
echo "üî® Compiling contracts..."
forge build

if [ $? -ne 0 ]; then
    echo "‚ùå Compilation failed"
    exit 1
fi

echo "‚úÖ Compilation successful"
echo ""

# Deploy with private key explicitly passed
echo "üì¶ Deploying contracts..."

# First try with verification
echo "Attempting deployment with verification..."
forge script script/AvalanchePreciseDeploy.s.sol \
    --rpc-url $AVALANCHE_FUJI_RPC \
    --private-key $PRIVATE_KEY \
    --broadcast \
    --verify \
    --etherscan-api-key $SNOWTRACE_API_KEY \
    -vvv

DEPLOY_RESULT=$?

# If verification fails, try without verification
if [ $DEPLOY_RESULT -ne 0 ]; then
    echo ""
    echo "‚ö†Ô∏è  Deployment with verification failed. Trying without verification..."
    echo ""
    
    forge script script/AvalanchePreciseDeploy.s.sol \
        --rpc-url $AVALANCHE_FUJI_RPC \
        --private-key $PRIVATE_KEY \
        --broadcast \
        -vvv
    
    DEPLOY_RESULT=$?
fi

if [ $DEPLOY_RESULT -eq 0 ]; then
    echo ""
    echo "‚úÖ PRECISE DEPLOYMENT SUCCESSFUL!"
    echo ""
    echo "üìã CONTRACT SUMMARY:"
    echo "‚úì All core contracts deployed"
    echo "‚úì Automation system active"
    echo "‚úì Hedging strategies ready"
    echo "‚úì Insurance operational"
    echo "‚úì Mock system configured (testnet)"
    echo ""
    echo "üîó Verify contracts: https://testnet.snowtrace.io/"
    echo "ÔøΩÔøΩ Faucet: https://faucet.avax.network/"
    echo ""
    echo "üìÑ IMPORTANT: Save the contract addresses that appear in the logs above!"
    echo ""
    echo "üéâ RiskGuardian AI is live on Avalanche!"
else
    echo "‚ùå Deployment failed - check logs above"
    echo ""
    echo "üîß TROUBLESHOOTING:"
    echo "1. Check if you have enough AVAX (need ~0.05 AVAX)"
    echo "2. Verify RPC is working: cast block-number --rpc-url $AVALANCHE_FUJI_RPC"
    echo "3. Check private key format (should start with 0x)"
    echo "4. Try running just the script without verification"
    exit 1
fi
