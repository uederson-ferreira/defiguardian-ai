[profile.default]
src = "src"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"
broadcast = "broadcast"
script = "script"

# Compiler settings
solc_version = "0.8.20"
optimizer = true
optimizer_runs = 200
via_ir = true
bytecode_hash = "none"
cbor_metadata = false

# Remappings para imports
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
    "@uniswap/v3-periphery/=lib/v3-periphery/",
    "@uniswap/v3-core/=lib/v3-core/",
    "forge-std/=lib/forge-std/src/"
]

# Enable experimental features se necessário
experimental = ["ABIEncoderV2"]

# Configurações de gas
gas_limit = 9223372036854775807
gas_price = 20000000000

# RPC URLs para diferentes redes
[rpc_endpoints]
mainnet = "https://mainnet.infura.io/v3/"
sepolia = "https://sepolia.infura.io/v3/"
goerli = "https://goerli.infura.io/v3/"
polygon = "https://polygon-mainnet.infura.io/v3/"
arbitrum = "https://arbitrum-mainnet.infura.io/v3/"
avalanche_fuji = "https://api.avax-test.network/ext/bc/C/rpc"
avalanche_mainnet = "https://api.avax.network/ext/bc/C/rpc"
anvil = "http://localhost:8545"

# Configurações de etherscan para verificação
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
avalanche_fuji = { key = "${SNOWTRACE_API_KEY}", url = "https://api-testnet.snowtrace.io/api" }
avalanche_mainnet = { key = "${SNOWTRACE_API_KEY}", url = "https://api.snowtrace.io/api" }

# Profile para build otimizado
[profile.build]
optimizer = true
optimizer_runs = 1000

# Profile para testes isolados
[profile.isolate]
test = "test"
src = "src"

# Suprimir warnings específicos
[profile.warnings]
ignored_error_codes = [2018, 5667]