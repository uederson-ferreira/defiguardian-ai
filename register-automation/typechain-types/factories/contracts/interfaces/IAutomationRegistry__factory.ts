/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAutomationRegistry,
  IAutomationRegistryInterface,
} from "../../../contracts/interfaces/IAutomationRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getUpkeep",
    outputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "executeGas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
      {
        internalType: "uint96",
        name: "balance",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "maxValidBlocknumber",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "lastPerformBlockNumber",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "amountSpent",
        type: "uint96",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "offchainConfig",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "encryptedEmail",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "upkeepContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "gasLimit",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "triggerType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "checkData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "triggerConfig",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "offchainConfig",
            type: "bytes",
          },
          {
            internalType: "uint96",
            name: "amount",
            type: "uint96",
          },
        ],
        internalType: "struct IAutomationRegistry.RegistrationParams",
        name: "requestParams",
        type: "tuple",
      },
    ],
    name: "registerUpkeep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAutomationRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IAutomationRegistryInterface {
    return new Interface(_abi) as IAutomationRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAutomationRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IAutomationRegistry;
  }
}
