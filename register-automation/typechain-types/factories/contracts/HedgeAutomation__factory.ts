/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HedgeAutomation,
  HedgeAutomationInterface,
} from "../../contracts/HedgeAutomation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlySimulatedBackend",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "RebalanceTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum HedgeAutomation.HedgeType",
        name: "hedgeType",
        type: "uint8",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "needed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "UpkeepChecked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "UpkeepPerformed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "enum HedgeAutomation.HedgeType",
        name: "hedgeType",
        type: "uint8",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
    ],
    name: "deactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newTargetPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "updateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStrategies",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "enum HedgeAutomation.HedgeType",
        name: "hedgeType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b80546001600160a01b031990811673694aa1769357215de4fac081bf1f309adc3253069081179092557fde032e96a833a2191f55c5766e34554d9b07734477ea9cb69c40158c1078e79380548216909217909155732260fac5e5542a773aa44fbcfedf7c193bc2c5996000527f3459054d09ae8631455b798b2b5d106e17bb4e68a39d2d2a935f5f1b7253988b8054909116731b44f3514812d835eb1bdb0acb33d3fa3351ee4317905561116f8061012f6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012d5780639dcb511a14610152578063e2842d791461017b578063f2fde38b14610190578063fc0f4f20146101a357600080fd5b80630e2efa47146100a35780633e9f9e49146100b8578063456f948b146100e65780634585e33b146100f95780636e04ff0d1461010c575b600080fd5b6100b66100b1366004610d9a565b6101b6565b005b6100cb6100c6366004610df4565b610498565b6040516100dd96959493929190610e58565b60405180910390f35b6100b66100f4366004610e9d565b6104fc565b6100b6610107366004610eb6565b6105d1565b61011f61011a366004610eb6565b6106f2565b6040516100dd929190610f28565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100dd565b61013a610160366004610f80565b6002602052600090815260409020546001600160a01b031681565b6101836108f6565b6040516100dd9190610fa4565b6100b661019e366004610f80565b61094d565b6100b66101b1366004610ff1565b610a67565b6001600160a01b0385166102025760405162461bcd60e51b815260206004820152600e60248201526d546f6b656e20696e76616c69646f60901b60448201526064015b60405180910390fd5b6000841161025d5760405162461bcd60e51b815260206004820152602260248201527f5175616e746964616465206465766520736572206d61696f7220717565207a65604482015261726f60f01b60648201526084016101f9565b6000831161027d5760405162461bcd60e51b81526004016101f99061101d565b60008211801561028e575060648211155b6102cf5760405162461bcd60e51b81526020600482015260126024820152715468726573686f6c6420696e76616c69646f60701b60448201526064016101f9565b6001600160a01b03858116600090815260026020526040902054166103365760405162461bcd60e51b815260206004820152601a60248201527f50726963652066656564206e616f20636f6e666967757261646f00000000000060448201526064016101f9565b60006040518060c00160405280876001600160a01b0316815260200186815260200185815260200184815260200160011515815260200183600281111561037f5761037f610e20565b90523360009081526001602081815260408084208054808501825590855293829020855160059095020180546001600160a01b0319166001600160a01b03909516949094178455908401519183019190915582015160028083019190915560608301516003830155608083015160048301805460ff198116921515928317825560a0860151959650869593919261ffff1990911661ff0019909116179061010090849081111561043157610431610e20565b021790555050336000818152600160208190526040909120549192507f25c67350cf07463e94855198e49a52367d387becaa7147449faa638c09ddab36916104799190611075565b84604051610488929190611088565b60405180910390a2505050505050565b600160205281600052604060002081815481106104b457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b039093169550909350919060ff8082169161010090041686565b3360009081526001602052604090205481106105565760405162461bcd60e51b815260206004820152601960248201527845737472617465676961206e616f20656e636f6e747261646160381b60448201526064016101f9565b3360009081526001602052604081208054839081106105775761057761109c565b6000918252602091829020600590910201600401805460ff19169215159290921790915560405182815233917fe2d9b7f1e07c794d9c19cb81343399f288c6d5a7ba85b73669b438836de8c2e3910160405180910390a250565b600080806105e1848601866110b2565b6001600160a01b0383166000908152600160205260408120805494975092955090935091849081106106155761061561109c565b60009182526020909120600590910201600481015490915060ff166106715760405162461bcd60e51b81526020600482015260126024820152714573747261746567696120696e617469766160701b60448201526064016101f9565b60026004820154610100900460ff16600281111561069157610691610e20565b036106a6576106a1848484610bb1565b6106b1565b6106b1848484610c33565b60408051848152602081018490526001600160a01b038616917f782f9dffadaa6eb5ff5b9bf8f73205d5492a0492c4a3c7fbe97d580be4580bc09101610488565b6000606060006107006108f6565b905060005b81518110156108d6576000600160008484815181106107265761072661109c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020905060005b81548110156108c15781818154811061076e5761076e61109c565b600091825260209091206004600590920201015460ff16156108af576000806108388484815481106107a2576107a261109c565b60009182526020918290206040805160c081018252600590930290910180546001600160a01b031683526001810154938301939093526002808401549183019190915260038301546060830152600483015460ff8082161515608085015292939260a0850192610100909204169081111561081f5761081f610e20565b600281111561083057610830610e20565b905250610cbd565b9150915081156108ac5760018686815181106108565761085661109c565b6020026020010151848360405160200161088e939291906001600160a01b039390931683526020830191909152604082015260600190565b604051602081830303815290604052975097505050505050506108ef565b50505b806108b9816110e7565b915050610753565b505080806108ce906110e7565b915050610705565b5060006040518060200160405280600081525092509250505b9250929050565b604080516001808252818301909252606091600091906020808301908036833701905050905033816000815181106109305761093061109c565b6001600160a01b0390921660209283029190910190910152919050565b6000546001600160a01b031633146109a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f9565b6001600160a01b038116610a0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f9565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600160205260409020548310610ac15760405162461bcd60e51b815260206004820152601960248201527845737472617465676961206e616f20656e636f6e747261646160381b60448201526064016101f9565b60008211610ae15760405162461bcd60e51b81526004016101f99061101d565b600081118015610af2575060648111155b610b335760405162461bcd60e51b81526020600482015260126024820152715468726573686f6c6420696e76616c69646f60701b60448201526064016101f9565b336000908152600160205260408120805485908110610b5457610b5461109c565b600091825260209182902060026005909202019081018590556003810184905560405186815290925033917fe2d9b7f1e07c794d9c19cb81343399f288c6d5a7ba85b73669b438836de8c2e391015b60405180910390a250505050565b6001600160a01b0383166000908152600160205260408120805484908110610bdb57610bdb61109c565b90600052602060002090600502019050836001600160a01b03167f621f936b03f95c4c82b0674e596cfc62258db33c34fcd7e7f765f279f2504edc826001015484604051610ba3929190918252602082015260400190565b6001600160a01b0383166000908152600160205260408120805484908110610c5d57610c5d61109c565b600091825260209182902060059091020160048101805460ff19169055604080518681529283018590529092506001600160a01b038616917f742123d89fd442fdcb9935af8e288428f5d79e3740109ad850d0054e4a400b969101610ba3565b6000806422ecb25c00818460a001516002811115610cdd57610cdd610e20565b03610cf15760409093015183111593915050565b60018460a001516002811115610d0957610d09610e20565b03610d1d5760409093015183101593915050565b6000610d2d828660400151610d40565b6060909501519094101594909350915050565b600081831115610d715781610d558185611075565b610d60906064611100565b610d6a9190611117565b9050610d7c565b81610d558482611075565b92915050565b6001600160a01b0381168114610d9757600080fd5b50565b600080600080600060a08688031215610db257600080fd5b8535610dbd81610d82565b9450602086013593506040860135925060608601359150608086013560038110610de657600080fd5b809150509295509295909350565b60008060408385031215610e0757600080fd5b8235610e1281610d82565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60038110610e5457634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0387168152602081018690526040810185905260608101849052821515608082015260c08101610e9260a0830184610e36565b979650505050505050565b600060208284031215610eaf57600080fd5b5035919050565b60008060208385031215610ec957600080fd5b823567ffffffffffffffff80821115610ee157600080fd5b818501915085601f830112610ef557600080fd5b813581811115610f0457600080fd5b866020828501011115610f1657600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b81811015610f5e57858101830151858201606001528201610f42565b506000606082860101526060601f19601f830116850101925050509392505050565b600060208284031215610f9257600080fd5b8135610f9d81610d82565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610fe55783516001600160a01b031683529284019291840191600101610fc0565b50909695505050505050565b60008060006060848603121561100657600080fd5b505081359360208301359350604090920135919050565b60208082526022908201527f507265636f20616c766f206465766520736572206d61696f7220717565207a65604082015261726f60f01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d7c57610d7c61105f565b82815260408101610f9d6020830184610e36565b634e487b7160e01b600052603260045260246000fd5b6000806000606084860312156110c757600080fd5b83356110d281610d82565b95602085013595506040909401359392505050565b6000600182016110f9576110f961105f565b5060010190565b8082028115828204841417610d7c57610d7c61105f565b60008261113457634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122095f486e1c8b11784d66fda43362687b711875bd84c89adac5c1c230147f5d41764736f6c63430008130033";

type HedgeAutomationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HedgeAutomationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HedgeAutomation__factory extends ContractFactory {
  constructor(...args: HedgeAutomationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HedgeAutomation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HedgeAutomation__factory {
    return super.connect(runner) as HedgeAutomation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HedgeAutomationInterface {
    return new Interface(_abi) as HedgeAutomationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HedgeAutomation {
    return new Contract(address, _abi, runner) as unknown as HedgeAutomation;
  }
}
